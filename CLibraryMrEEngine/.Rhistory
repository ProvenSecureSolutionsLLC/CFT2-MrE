return(as.double(x[1]) * as.double(x[2]))
}
.Call(myfunction2, as.list(c(2,3,4)))
myfunction2 <- function(x)
{
return(x[1] * as.doublex[2])
}
.Call(myfunction2, as.list(c(2,3,4)))
myfunction2 <- function(x,y,z)
{
return(x)
}
.Call(myfunction2, as.list(c(2,3,4)))
myfunction2(as.list(c(2,3,4)))
myfunction2 <- function(x,y,z)
{
return(x)
}
cat(myfunction2(as.list(c(2,3,4))))
myfunction2(as.list(c(2,3,4)))
myfunction2(as.list(c(2,3,4)))
myfunction2(as.list(c(2,3,4)))
myfunction2(as.list(c(2,3,4)))
myfunction2(as.list(c(2,3,4)))
myfunction2(c(2,3,4))
myfunction2 <- function(x,y,z)
{
return(x * x)
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x * x)
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x * x)
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x[1])
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x[2])
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x[2] * x[2])
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x[2] * x[2])
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x[1] * x[2])
}
myfunction2(c(2,3,4))
myfunction2 <- function(x)
{
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
warnings()\
warnings()
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
cat(x)
cat(x[2])
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
cat(x[2])
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
warnings()
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
cat(x[1][1])
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
cat(as.double(x[1]))
return(x[1] * x[2] * x[3])
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
cat(as.double(x[1]),"\n")
cat(as.double(x[2]),"\n")
cat(as.double(x[3]),"\n")
return(as.double(x[1]) * as.double(x[2]) * as.double(x[3]))
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
return(as.double(x[1]) * as.double(x[2]) * as.double(x[3]))
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
myfunction <- function(x)
{
return(x * x)
}
myfunction2 <- function(x)
{
return(as.double(x[1]) * as.double(x[2]) * as.double(x[3]))
}
myfunction2(c(2,3,4))
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("do_get_constraint",c(2),myfunction,new.env())
.Call("do_get_constraint",c(2.2),myfunction,new.env())
minValue= as.double(100)
variable_index = as.integer(1)
.Call("GetVariableMinValue", variable_index, minValue)
minValue = as.double(-1000.1)
maxValue = as.double(1000.1)
.Call("AddVariableWithRange",minValue, maxValue)
 cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-100.1)
maxValue = as.double(100.1)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
minValue = as.double(-1000.3)
maxValue = as.double(1000.3)
.Call("AddVariableWithRange",minValue, maxValue)
cat("Variables count is ", .Call("GetVariablesCount"),"\n")
variable_index = as.integer(2)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("set_constraint",myfunction2,new.env())
.Call("get_constraint_value_at_sigma_point",c(2,3,4))
.Call("RemoveVariable", as.integer(1))
variable_index = as.integer(1)
cat("MinValue of ", variable_index + 1, " variable is ", .Call("GetVariableMinValue", variable_index), "\n")
cat("MaxValue of ", variable_index + 1, " variable is ", .Call("GetVariableMaxValue", variable_index), "\n")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
dyn.load("MrE_Engine.dll")
.Call("ConstructMrEEngine")
.Call("DisposeMrEEngine")
dyn.unload("MrE_Engine.dll")
q()
